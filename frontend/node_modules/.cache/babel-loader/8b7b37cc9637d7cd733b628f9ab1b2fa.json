{"ast":null,"code":"var _jsxFileName = \"/home/roger/\\xC1rea de Trabalho/chat/frontend/src/pages/Chat.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport socketio from 'socket.io-client';\nimport api from '../services/api';\nimport './Chat.css';\nexport default function Chat() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sender = 1;\n  const receiver = 2;\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      sender\n    }\n  }), [sender]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n  }, []);\n\n  function handleInput(event) {\n    event.preventDefault();\n\n    if (input) {\n      const message = {\n        sender,\n        receiver,\n        text: input\n      };\n      socket.emit('sendMessage', message);\n      setInput('');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages-container\",\n    className: \"messages-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"received-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"received-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 55\n    }\n  }, \"Ol\\xE1\"))), messages.map(message => message.sender === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sended-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sended-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 61\n    }\n  }, message.text))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"received-message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"received-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 67\n    }\n  }, message.text))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => {\n      setInput(e.target.value);\n    },\n    onKeyPress: event => event.key === 'Enter' ? handleInput(event) : null,\n    name: \"input\",\n    id: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/roger/Área de Trabalho/chat/frontend/src/pages/Chat.js"],"names":["React","useEffect","useState","useMemo","socketio","api","Chat","input","setInput","messages","setMessages","sender","receiver","socket","query","on","message","handleInput","event","preventDefault","text","emit","map","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport socketio from 'socket.io-client';\n\nimport api from '../services/api';\n\nimport './Chat.css';\n\nexport default function Chat() {\n\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const sender = 1;\n    const receiver = 2;\n\n    const socket = useMemo(() => socketio('http://localhost:3333', {\n        query: { sender }\n    }), [sender]);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n    }, []);\n\n    function handleInput(event) {\n        event.preventDefault();\n        if (input) {\n            const message = { sender, receiver, text: input };\n            socket.emit('sendMessage', message);\n            setInput('');\n        }\n    }\n\n    return (\n        <>\n            <div id=\"messages-container\" className=\"messages-container\">\n                <div className=\"received-message-container\">\n                    <div className=\"received-message\"><p>Olá</p></div>\n                </div>\n\n                {messages.map(message => (\n                    message.sender === 1 ? (\n                        <div className=\"sended-message-container\">\n                            <div className=\"sended-message\"><p>{message.text}</p></div>\n                        </div>\n                    ) : (\n                            <div className=\"received-message-container\">\n                                <div className=\"received-message\"><p>{message.text}</p></div>\n                            </div>\n                        )\n                ))}\n\n            </div>\n            <div className=\"input-container\">\n                <input value={input} onChange={e => { setInput(e.target.value) }} onKeyPress={event => event.key === 'Enter' ? handleInput(event) : null} name=\"input\" id=\"input\" />\n                <button type=\"submit\" onClick={handleInput}></button>\n            </div>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}